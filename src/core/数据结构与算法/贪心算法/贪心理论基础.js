/**
 * 贪心的本质是选择每一阶段的局部最优，从而达到全局最优。
 * 贪心无套路、方法论，不像二叉树和回溯算法
 * 需要思考局部最优是什么？能不能推出全局最优？如果感觉可以，又举不出反例，就可以试一下贪心算法。
 * 
 * 举个例子，有一堆钞票，你可以拿走十张，如果想达到最大的金额，你要怎么拿？
   指定每次拿最大的，最终结果就是拿走最大数额的钱。
   每次拿最大的就是局部最优，最后拿走最大数额的钱就是推出全局最优。

 * 再举一个例子如果是 有一堆盒子，你有一个背包体积为n，如何把背包尽可能装满，如果还每次选最大的盒子，就不行了。这时候就需要动态规划。

   贪心算法一般分为如下四步：
    1、将问题分解为若干个子问题
    2、找出适合的贪心策略
    3、求解每一个子问题的最优解
    4、将局部最优解堆叠成全局最优解

   这个四步其实过于理论化了，我们平时在做贪心类的题目 很难去按照这四步去思考，真是有点“鸡肋”。
   做题的时候，只要想清楚 局部最优 是什么，如果推导出全局最优，其实就够了。
 * 
 */